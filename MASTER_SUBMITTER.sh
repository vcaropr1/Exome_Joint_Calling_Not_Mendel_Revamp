#!/bin/bash

PROJECT=$1
SAMPLE_SHEET=$2
# REF_GENOME=$3
# DBSNP=$4
GVCF_LIST=$3
PREFIX=$4

#############FIXED DIRECTORIES################

SCRIPT_DIR="FIND/SCRIPT/HOME/WHEN/READY"
JAVA_1_7="/isilon/sequencing/Kurt/Programs/Java/jdk1.7.0_25/bin"
CORE_PATH="/isilon/sequencing/Seq_Proj"
GATK_DIR="/isilon/sequencing/CIDRSeqSuiteSoftware/gatk/GATK_3/GenomeAnalysisTK-3.3-0"
GATK_3_1_1_DIR=/isilon/sequencing/CIDRSeqSuiteSoftware/gatk/GATK_3/GenomeAnalysisTK-3.1-1
GATK_DIR_NIGHTLY="/isilon/sequencing/CIDRSeqSuiteSoftware/gatk/GATK_3/GenomeAnalysisTK-nightly-2015-01-15-g92376d3"
SAMTOOLS_DIR="/isilon/sequencing/Kurt/Programs/samtools/samtools-0.1.18/"
TABIX_DIR="/isilon/sequencing/Kurt/Programs/TABIX/tabix-0.2.6/"
CIDR_SEQSUITE_JAVA_DIR=/isilon/sequencing/CIDRSeqSuiteSoftware/java/jre1.7.0_45/bin
CIDR_SEQSUITE_6_1_1_DIR=/isilon/sequencing/CIDRSeqSuiteSoftware/RELEASES/6.1.1

##############FIXED FILE PATHS################

KEY="/isilon/sequencing/CIDRSeqSuiteSoftware/gatk/GATK_2/lee.watkins_jhmi.edu.key"
HAPMAP_VCF=/isilon/sequencing/GATK_resource_bundle/2.5/b37/hapmap_3.3.b37.vcf
OMNI_VCF=/isilon/sequencing/GATK_resource_bundle/2.5/b37/1000G_omni2.5.b37.vcf
ONEKG_SNPS_VCF=/isilon/sequencing/GATK_resource_bundle/2.5/b37/1000G_phase1.snps.high_confidence.b37.vcf
DBSNP_138_VCF=/isilon/sequencing/GATK_resource_bundle/2.8/b37/dbsnp_138.b37.vcf
ONEKG_INDELS_VCF=/isilon/sequencing/GATK_resource_bundle/2.2/b37/Mills_and_1000G_gold_standard.indels.b37.vcf
P3_1KG="/isilon/sequencing/1000genomes/Full_Project/Sep_2014/20130502/ALL.wgs.phase3_shapeit2_mvncall_integrated_v5.20130502.sites.vcf.gz"
ExAC="/isilon/sequencing/ExAC/Release_0.3/ExAC.r0.3.sites.vep.vcf.gz"
KNOWN_SNPS=/isilon/sequencing/GATK_resource_bundle/2.8/b37/dbsnp_138.b37.excluding_sites_after_129.vcf
VERACODE_CSV=/isilon/sequencing/CIDRSeqSuiteSoftware/resources/Veracode_hg18_hg19.csv

############################################################################
#################Start of Combine Gvcf Functions############################
############################################################################

CREATE_PROJECT_INFO_ARRAY ()
{
PROJECT_INFO_ARRAY=(`sed 's/\r//g' $SAMPLE_SHEET | awk 'NR>1' | sed 's/,/\t/g' | sort -k 8,8 | awk '$1=="'$PROJECT'" {print $1,$12,$18}' | sort | uniq`)

PROJECT_NAME=${PROJECT_INFO_ARRAY[0]}
PROJECT_REF_GENOME=${PROJECT_INFO_ARRAY[1]}
PROJECT_DBSNP=${PROJECT_INFO_ARRAY[2]}
}


COMBINE_GVCF(){
echo \
 qsub \
 -N 01_COMBINE_GVCF_$PROJECT"_chr"$CHROMOSOME \
 -o $CORE_PATH/$PROJECT/LOGS/$PROJECT.01_COMBINE_GVCF_chr$CHROMOSOME.log \
 $SCRIPT_DIR/01_COMBINE_GVCF.sh \
 $JAVA_1_7 $GATK_DIR $PROJECT_REF_GENOME \
 $KEY $CORE_PATH $PROJECT_NAME $GVCF_LIST \
 $PREFIX $CHROMOSOME
 }

GENOTYPE_GVCF(){
echo \
 qsub \
 -N 02_GENOTYPE_GVCF_$PROJECT"_chr"$CHROMOSOME \
 -hold_jid 01_COMBINE_GVCF_$PROJECT"_chr"$CHROMOSOME \
 -o $CORE_PATH/$PROJECT/LOGS/$PROJECT.02_GENOTYPE_GVCF_chr$CHROMOSOME.log \
 $SCRIPT_DIR/02_GENOTYPE_GVCF.sh \
 $JAVA_1_7 $GATK_DIR $PROJECT_REF_GENOME \
 $KEY $CORE_PATH $PROJECT_NAME \
 $PREFIX $CHROMOSOME
}

VARIANT_ANNOTATOR(){
echo \
 qsub \
 -N 03_VARIANT_ANNOTATOR_$PROJECT"_chr"$CHROMOSOME \
 -hold_jid 02_GENOTYPE_GVCF_$PROJECT"_chr"$CHROMOSOME \
 -o $CORE_PATH/$PROJECT/LOGS/$PROJECT.03_VARIANT_ANNOTATOR_chr$CHROMOSOME.log \
 $SCRIPT_DIR/03_VARIANT_ANNOTATOR.sh \
 $JAVA_1_7 $GATK_DIR $PROJECT_REF_GENOME \
 $KEY $CORE_PATH $PROJECT_NAME \
 $PREFIX $CHROMOSOME
}

##############################################################################
#####################End of Combine Gvcf Functions############################
##############################################################################

##############################################################################
##################Start of VQSR and Refinement Functions######################
##############################################################################

GENERATE_CAT_VARIANTS_HOLD_ID(){
CAT_VARIANTS_HOLD_ID=$CAT_VARIANTS_HOLD_ID'03_VARIANT_ANNOTATOR_'$PROJECT'_chr'$CHROMOSOME','
}

CAT_VARIANTS(){
echo \
 qsub \
 -N 04_CAT_VARIANTS_$PROJECT \
 -hold_jid $CAT_VARIANTS_HOLD_ID \
 -o $CORE_PATH/$PROJECT/LOGS/$PROJECT.04_CAT_VARIANTS.log \
 $SCRIPT_DIR/04_CAT_VARIANTS.sh \
 $JAVA_1_7 $GATK_3_1_1_DIR $PROJECT_REF_GENOME \
 $CORE_PATH $PROJECT_NAME $PREFIX
}

VARIANT_RECALIBRATOR_SNV() {
echo \
 qsub \
 -N 05A_VARIANT_RECALIBRATOR_SNV_$PROJECT \
 -hold_jid 04_CAT_VARIANTS_$PROJECT \
 -o $CORE_PATH/$PROJECT/LOGS/$PROJECT.05A_VARIANT_RECALIBRATOR_SNV.log \
 $SCRIPT_DIR/05A_VARIANT_RECALIBRATOR_SNV.sh \
 $JAVA_1_7 $GATK_DIR $KEY $PROJECT_REF_GENOME $HAPMAP_VCF $OMNI_VCF $ONEKG_SNPS_VCF $DBSNP_138_VCF \
 $CORE_PATH $PROJECT_NAME $PREFIX
}


VARIANT_RECALIBRATOR_INDEL() {
echo \
 qsub \
 -N 05B_VARIANT_RECALIBRATOR_INDEL_$PROJECT \
 -hold_jid 04_CAT_VARIANTS_$PROJECT \
 -o $CORE_PATH/$PROJECT/LOGS/$PROJECT.05B_VARIANT_RECALIBRATOR_INDEL.log \
 $SCRIPT_DIR/05B_VARIANT_RECALIBRATOR_INDEL.sh \
 $JAVA_1_7 $GATK_DIR $KEY $PROJECT_REF_GENOME $ONEKG_INDELS_VCF \
 $CORE_PATH $PROJECT_NAME $PREFIX
}


APPLY_RECALIBRATION_SNV(){
echo \
 qsub \
 -N 06_APPLY_RECALIBRATION_SNV_$PROJECT \
 -hold_jid 05A_VARIANT_RECALIBRATOR_SNV_$PROJECT \
 -o $CORE_PATH/$PROJECT/LOGS/$PROJECT.06_APPLY_RECALIBRATION_SNV.log \
 $SCRIPT_DIR/06_APPLY_RECALIBRATION_SNV.sh \
 $JAVA_1_7 $GATK_DIR $KEY $PROJECT_REF_GENOME \
 $CORE_PATH $PROJECT_NAME $PREFIX
}


APPLY_RECALIBRATION_INDEL(){
echo \
 qsub \
 -N 07_APPLY_RECALIBRATION_INDEL_$PROJECT \
 -hold_jid 06_APPLY_RECALIBRATION_SNV_$PROJECT \
 -o $CORE_PATH/$PROJECT/LOGS/$PROJECT.07_APPLY_RECALIBRATION_INDEL.log \
 $SCRIPT_DIR/07_APPLY_RECALIBRATION_INDEL.sh \
 $JAVA_1_7 $GATK_DIR $KEY $PROJECT_REF_GENOME \
 $CORE_PATH $PROJECT_NAME $PREFIX
}


BGZIP_AND_TABIX_RECAL_VCF(){
echo \
 qsub \
 -N 08A_BGZIP_AND_TABIX_RECAL_VCF_$PROJECT \
 -hold_jid 07_APPLY_RECALIBRATION_INDEL_$PROJECT \
 -o $CORE_PATH/$PROJECT/LOGS/$PROJECT.08A_BGZIP_AND_TABIX_RECAL_VCF.log \
 $SCRIPT_DIR/08A_BGZIP_AND_TABIX_RECAL_VCF.sh \
 $TABIX_DIR \
 $CORE_PATH $PROJECT_NAME $PREFIX
}


CALCULATE_GENOTYPE_POSTERIORS(){
echo \
 qsub \
 -N 08B_CALCULATE_GENOTYPE_POSTERIORS_$PROJECT \
 -hold_jid 07_APPLY_RECALIBRATION_INDEL_$PROJECT \
 -o $CORE_PATH/$PROJECT/LOGS/$PROJECT.08B_CALCULATE_GENOTYPE_POSTERIORS.log \
 $SCRIPT_DIR/08B_CALCULATE_GENOTYPE_POSTERIORS.sh \
 $JAVA_1_7 $GATK_DIR_NIGHTLY $KEY $PROJECT_REF_GENOME $P3_1KG $ExAC \
 $CORE_PATH $PROJECT_NAME $PREFIX
}


VARIANT_ANNOTATOR_REFINED(){
echo \
 qsub \
 -N 09_VARIANT_ANNOTATOR_REFINED_$PROJECT \
 -hold_jid 08B_CALCULATE_GENOTYPE_POSTERIORS_$PROJECT \
 -o $CORE_PATH/$PROJECT/LOGS/$PROJECT.09_VARIANT_ANNOTATOR_REFINED.log \
 $SCRIPT_DIR/09_VARIANT_ANNOTATOR_REFINED.sh \
 $JAVA_1_7 $GATK_DIR $KEY $PROJECT_REF_GENOME $PROJECT_DBSNP \
 $CORE_PATH $PROJECT_NAME $PREFIX
}


BGZIP_AND_TABIX_REFINED_VCF(){
echo \
 qsub \
 -N 10_BGZIP_AND_TABIX_REFINED_VCF_$PROJECT \
 -hold_jid 09_VARIANT_ANNOTATOR_REFINED_$PROJECT \
 -o $CORE_PATH/$PROJECT/LOGS/$PROJECT.10_BGZIP_AND_TABIX_REFINED_VCF.log \
 $SCRIPT_DIR/10_BGZIP_AND_TABIX_REFINED_VCF.sh \
 $TABIX_DIR \
 $CORE_PATH $PROJECT_NAME $PREFIX
}

###########################################################################
#################End of VQSR and Refinement Functions######################
###########################################################################

###########################################################################
###################Start of Vcf Splitter Functions#########################
###########################################################################

CREATE_SAMPLE_INFO_ARRAY ()
{
SAMPLE_INFO_ARRAY=(`sed 's/\r//g' $SAMPLE_SHEET | awk 'NR>1' | sed 's/,/\t/g' | sort -k 8,8 | uniq | awk '$8=="'$SAMPLE'" {print $1,$8,$17,$15,$18,$12}'`)

PROJECT_SAMPLE=${SAMPLE_INFO_ARRAY[0]}
SM_TAG=${SAMPLE_INFO_ARRAY[1]}
TARGET_BED=${SAMPLE_INFO_ARRAY[2]}
TITV_BED=${SAMPLE_INFO_ARRAY[3]}
DBSNP=${SAMPLE_INFO_ARRAY[4]} #Not used unless we implement HC_BAM
SAMPLE_REF_GENOME=${SAMPLE_INFO_ARRAY[5]}
}

SELECT_PASSING_VARIANTS_PER_SAMPLE(){
echo \
 qsub \
 -N 11_SELECT_VARIANTS_FOR_SAMPLE_$SM_TAG \
 -hold_jid 09_VARIANT_ANNOTATOR_REFINED_$PROJECT \
 -o $CORE_PATH/$PROJECT/LOGS/$PROJECT.$SM_TAG.11_SELECT_VARIANTS_FOR_SAMPLE.log \
 $SCRIPT_DIR/11_SELECT_VARIANTS_FOR_SAMPLE.sh \
 $JAVA_1_7 $GATK_DIR $KEY $SAMPLE_REF_GENOME \
 $CORE_PATH $PROJECT_SAMPLE $SM_TAG $PREFIX
}

BGZIP_AND_TABIX_SAMPLE_VCF(){
echo \
 qsub \
 -N 12A_BGZIP_AND_TABIX_SAMPLE_VCF_$SM_TAG \
 -hold_jid 11_SELECT_VARIANTS_FOR_SAMPLE_$SM_TAG \
 -o $CORE_PATH/$PROJECT/LOGS/$PROJECT.$SM_TAG.12A_BGZIP_AND_TABIX_SAMPLE_VCF.log \
 $SCRIPT_DIR/12A_BGZIP_AND_TABIX_SAMPLE_VCF.sh \
 $TABIX_DIR \
 $CORE_PATH $PROJECT_SAMPLE $SM_TAG
}

PASSING_VARIANTS_ON_TARGET_BY_SAMPLE(){
echo \
 qsub \
 -N 12B_PASSING_VARIANTS_ON_TARGET_BY_SAMPLE_$SM_TAG \
 -hold_jid 11_SELECT_VARIANTS_FOR_SAMPLE_$SM_TAG \
 -o $CORE_PATH/$PROJECT/LOGS/$PROJECT.$SM_TAG.12B_PASSING_VARIANTS_ON_TARGET_BY_SAMPLE.log \
 $SCRIPT_DIR/12B_PASSING_VARIANTS_ON_TARGET_BY_SAMPLE.sh \
 $JAVA_1_7 $GATK_DIR $KEY $SAMPLE_REF_GENOME \
 $CORE_PATH $PROJECT_SAMPLE $SM_TAG $TARGET_BED
}

PASSING_SNVS_ON_BAIT_BY_SAMPLE(){
echo \
 qsub \
 -N 12C_PASSING_SNVS_ON_BAIT_BY_SAMPLE_$SM_TAG \
 -hold_jid 11_SELECT_VARIANTS_FOR_SAMPLE_$SM_TAG \
 -o $CORE_PATH/$PROJECT/LOGS/$PROJECT.$SM_TAG.12C_PASSING_SNVS_ON_BAIT_BY_SAMPLE.log \
 $SCRIPT_DIR/12C_PASSING_SNVS_ON_BAIT_BY_SAMPLE.sh \
 $JAVA_1_7 $GATK_DIR $KEY $SAMPLE_REF_GENOME \
 $CORE_PATH $PROJECT_SAMPLE $SM_TAG
}

PASSING_SNVS_ON_TARGET_BY_SAMPLE(){
echo \
 qsub \
 -N 12D_PASSING_SNVS_ON_TARGET_BY_SAMPLE_$SM_TAG \
 -hold_jid 11_SELECT_VARIANTS_FOR_SAMPLE_$SM_TAG \
 -o $CORE_PATH/$PROJECT/LOGS/$PROJECT.$SM_TAG.12D_PASSING_SNVS_ON_TARGET_BY_SAMPLE.log \
 $SCRIPT_DIR/12D_PASSING_SNVS_ON_TARGET_BY_SAMPLE.sh \
 $JAVA_1_7 $GATK_DIR $KEY $SAMPLE_REF_GENOME \
 $CORE_PATH $PROJECT_SAMPLE $SM_TAG $TARGET_BED
}

PASSING_INDELS_ON_BAIT_BY_SAMPLE(){
echo \
 qsub \
 -N 12E_PASSING_INDELS_ON_BAIT_BY_SAMPLE_$SM_TAG \
 -hold_jid 11_SELECT_VARIANTS_FOR_SAMPLE_$SM_TAG \
 -o $CORE_PATH/$PROJECT/LOGS/$PROJECT.$SM_TAG.12E_PASSING_INDELS_ON_BAIT_BY_SAMPLE.log \
 $SCRIPT_DIR/12E_PASSING_INDELS_ON_BAIT_BY_SAMPLE.sh \
 $JAVA_1_7 $GATK_DIR $KEY $SAMPLE_REF_GENOME \
 $CORE_PATH $PROJECT_SAMPLE $SM_TAG
}

PASSING_INDELS_ON_TARGET_BY_SAMPLE(){
echo \
 qsub \
 -N 12F_PASSING_INDELS_ON_TARGET_BY_SAMPLE_$SM_TAG \
 -hold_jid 11_SELECT_VARIANTS_FOR_SAMPLE_$SM_TAG \
 -o $CORE_PATH/$PROJECT/LOGS/$PROJECT.$SM_TAG.12F_PASSING_INDELS_ON_TARGET_BY_SAMPLE.log \
 $SCRIPT_DIR/12F_PASSING_INDELS_ON_TARGET_BY_SAMPLE.sh \
 $JAVA_1_7 $GATK_DIR $KEY $SAMPLE_REF_GENOME \
 $CORE_PATH $PROJECT_SAMPLE $SM_TAG $TARGET_BED
}

PASSING_SNVS_ON_BAIT_AND_TITV_ALL(){
echo \
 qsub \
 -N 12G_PASSING_SNVS_ON_BAIT_AND_TITV_ALL_$SM_TAG \
 -hold_jid 11_SELECT_VARIANTS_FOR_SAMPLE_$SM_TAG \
 -o $CORE_PATH/$PROJECT/LOGS/$PROJECT.$SM_TAG.12G_PASSING_SNVS_ON_BAIT_AND_TITV_ALL.log \
 $SCRIPT_DIR/12G_PASSING_SNVS_ON_BAIT_AND_TITV_ALL.sh \
 $JAVA_1_7 $GATK_DIR $KEY $SAMPLE_REF_GENOME \
 $CORE_PATH $PROJECT_SAMPLE $SM_TAG $TITV_BED
}

TITV_ALL(){
echo \
 qsub \
 -N 12G-1_TITV_ALL_$SM_TAG \
 -hold_jid 12G_PASSING_SNVS_ON_BAIT_AND_TITV_ALL_$SM_TAG \
 -o $CORE_PATH/$PROJECT/LOGS/$PROJECT.$SM_TAG.12G-1_TITV_ALL.log \
 $SCRIPT_DIR/12G-1_TITV_ALL.sh \
 $SAMTOOLS_DIR \
 $CORE_PATH $PROJECT_SAMPLE $SM_TAG
}

PASSING_SNVS_ON_BAIT_AND_TITV_KNOWN(){
echo \
 qsub \
 -N 12H_PASSING_SNVS_ON_BAIT_AND_TITV_KNOWN_$SM_TAG \
 -hold_jid 11_SELECT_VARIANTS_FOR_SAMPLE_$SM_TAG \
 -o $CORE_PATH/$PROJECT/LOGS/$PROJECT.$SM_TAG.12H_PASSING_SNVS_ON_BAIT_AND_TITV_KNOWN.log \
 $SCRIPT_DIR/12H_PASSING_SNVS_ON_BAIT_AND_TITV_KNOWN.sh \
 $JAVA_1_7 $GATK_DIR $KEY $SAMPLE_REF_GENOME $KNOWN_SNPS \
 $CORE_PATH $PROJECT_SAMPLE $SM_TAG $TITV_BED
}

TITV_KNOWN(){
echo \
 qsub \
 -N 12H-1_TITV_KNOWN_$SM_TAG \
 -hold_jid 12H_PASSING_SNVS_ON_BAIT_AND_TITV_KNOWN_$SM_TAG \
 -o $CORE_PATH/$PROJECT/LOGS/$PROJECT.$SM_TAG.12H-1_TITV_KNOWN.log \
 $SCRIPT_DIR/12H-1_TITV_KNOWN.sh \
 $SAMTOOLS_DIR \
 $CORE_PATH $PROJECT_SAMPLE $SM_TAG
}

PASSING_SNVS_ON_BAIT_AND_TITV_NOVEL(){
echo \
 qsub \
 -N 12I_PASSING_SNVS_ON_BAIT_AND_TITV_NOVEL_$SM_TAG \
 -hold_jid 11_SELECT_VARIANTS_FOR_SAMPLE_$SM_TAG \
 -o $CORE_PATH/$PROJECT/LOGS/$PROJECT.$SM_TAG.12I_PASSING_SNVS_ON_BAIT_AND_TITV_NOVEL.log \
 $SCRIPT_DIR/12I_PASSING_SNVS_ON_BAIT_AND_TITV_NOVEL.sh \
 $JAVA_1_7 $GATK_DIR $KEY $SAMPLE_REF_GENOME $KNOWN_SNPS \
 $CORE_PATH $PROJECT_SAMPLE $SM_TAG $TITV_BED
}

TITV_NOVEL(){
echo \
 qsub \
 -N 12I-1_TITV_NOVEL_$SM_TAG \
 -hold_jid 12I_PASSING_SNVS_ON_BAIT_AND_TITV_NOVEL_$SM_TAG \
 -o $CORE_PATH/$PROJECT/LOGS/$PROJECT.$SM_TAG.12I-1_TITV_NOVEL.log \
 $SCRIPT_DIR/12I-1_TITV_NOVEL.sh \
 $SAMTOOLS_DIR \
 $CORE_PATH $PROJECT_SAMPLE $SM_TAG
}

CONCORDANCE_ON_TARGET_PER_SAMPLE(){
echo \
 qsub \
 -N 13_CONCORDANCE_ON_TARGET_PER_SAMPLE_$SM_TAG \
 -hold_jid 12G-1_TITV_ALL_$SM_TAG,12H-1_TITV_KNOWN_$SM_TAG,12I-1_TITV_NOVEL_$SM_TAG \
 -o $CORE_PATH/$PROJECT/LOGS/$PROJECT.$SM_TAG.13_CONCORDANCE_ON_TARGET_PER_SAMPLE.log \
 $SCRIPT_DIR/13_CONCORDANCE_ON_TARGET_PER_SAMPLE.sh \
 $CIDR_SEQSUITE_JAVA_DIR $CIDR_SEQSUITE_6_1_1_DIR $VERACODE_CSV \
 $CORE_PATH $PROJECT_SAMPLE $SM_TAG $TARGET_BED
}


##########################################################################
######################End of Functions####################################
##########################################################################

CREATE_PROJECT_INFO_ARRAY

for CHROMOSOME in {{1..22},{X,Y}};
 do
COMBINE_GVCF
GENOTYPE_GVCF
VARIANT_ANNOTATOR
GENERATE_CAT_VARIANTS_HOLD_ID
 done

CAT_VARIANTS
VARIANT_RECALIBRATOR_SNV
VARIANT_RECALIBRATOR_INDEL
APPLY_RECALIBRATION_SNV
APPLY_RECALIBRATION_INDEL
BGZIP_AND_TABIX_RECAL_VCF
CALCULATE_GENOTYPE_POSTERIORS
VARIANT_ANNOTATOR_REFINED
BGZIP_AND_TABIX_REFINED_VCF

for SAMPLE in $(awk 'BEGIN {FS=","} NR>1 {print $8}' $SAMPLE_SHEET | sort | uniq )
do
CREATE_SAMPLE_INFO_ARRAY
SELECT_PASSING_VARIANTS_PER_SAMPLE
BGZIP_AND_TABIX_SAMPLE_VCF
PASSING_VARIANTS_ON_TARGET_BY_SAMPLE
PASSING_SNVS_ON_BAIT_BY_SAMPLE
PASSING_SNVS_ON_TARGET_BY_SAMPLE
PASSING_INDELS_ON_BAIT_BY_SAMPLE
PASSING_INDELS_ON_TARGET_BY_SAMPLE
PASSING_SNVS_ON_BAIT_AND_TITV_ALL
TITV_ALL
PASSING_SNVS_ON_BAIT_AND_TITV_KNOWN
TITV_KNOWN
PASSING_SNVS_ON_BAIT_AND_TITV_NOVEL
TITV_NOVEL
CONCORDANCE_ON_TARGET_PER_SAMPLE
done



# Chromosome loop for the COMBINE_GVCF (REPLACES SUBMITTER_COMBINE_GVCF.sh and COMBINE_GVCF.sh)
# 	Breakout COMBINE GVCF to:
# 			   COMBINE_GVCF
# 			   GENOTYPE_GVCF    (DEPENDENT ON COMBINE_GVCF)
# 			   VARIANT_ANNOTATOR (DEPENDENT ON GENOTYPE_GVCF)
#
# ### Next breakdown VQSR.GATK-3.3-0_CGP_26April2015.sh
# 		CATVARIANTS
# 		VARIANT_RECAL_SNV (DEPENDENT ON CATVARIANTS)
# 		VARIANT_RECAL_INDEL (DEPENDENT ON CATVARIANTS)
# 		APPLY_SNV (DEPENDENT ON VARIANT_RECAL_SNV)
# 		APPLY_INDEL (DEPENDENT ON VARIANT_RECA_INDEL && APPLY_SNV)
# 		BGZIP&TABIX (DEPENDENT ON APPLY_INDEL)
# 		CALCULATE_GENOTYPE_POSTERIORS (DEPENDENT ON APPLY_INDEL)
# 		VARIANT_ANNOTATOR (CALCULATE_GENOTYPE_POSTERIORS)
# 		BGZIP&TABIX (DEPENDENT ON VARIANT_ANNOTATOR)
#
# ### Next breakdown of VCF.Splitter.NEW.PIPELINE.HC.bam.sh (Also to replace the SUBMITTER)
# 		## Note: All these files can either:
# 							# A: Run off of the refined VQSR (big vcf)
# 							# B: Run off the 1st step vcf that has the extracted the passing variants for one sample ( I like this more to try 1st)
# 		SELECT_PASSING_VARIANTS (DEPENDENT ON CALCULATE_GENOTYPE_POSTERIORS)
# 		BGZIP_AND_TABIX (DEPENDENT ON SELECT_PASSING_VARIANTS)
# 		PASSING_VARIANTS_ON_TARGET_BY_SAMPLE (DEPENDENT ON COMBINE_VARIANTS OR CALCULATE_GENOTYPE_POSTERIORS)
# 		PASSING_SNVS_ON_BAIT_BY_SAMPLE (DEPENDENT ON COMBINE_VARIANTS OR CALCULATE_GENOTYPE_POSTERIORS)
# 		PASSING_SNVS_ON_TARGET_BY_SAMPLE (DEPENDENT ON COMBINE_VARIANTS OR CALCULATE_GENOTYPE_POSTERIORS)
# 		PASSING_INDELS_ON_BAIT_BY_SAMPLE (DEPENDENT ON COMBINE_VARIANTS OR CALCULATE_GENOTYPE_POSTERIORS)
# 		PASSING_INDELS_ON_TARGET_BY_SAMPLE (DEPENDENT ON COMBINE_VARIANTS OR CALCULATE_GENOTYPE_POSTERIORS)
# 		PASSING_SNVS_ON_BAIT_AND_TITV_ALL (DEPENDENT ON COMBINE_VARIANTS OR CALCULATE_GENOTYPE_POSTERIORS)
# 		TITV_ALL (DEPENDENT ON PASSING_SNVS_ON_BAIT_AND_TITV_ALL)
# 		PASSING_SNVS_ON_BAIT_AND_TITV_KNOWN (DEPENDENT ON COMBINE_VARIANTS OR CALCULATE_GENOTYPE_POSTERIORS)
# 		TITV_KNOWN (DEPENDENT ON PASSING_SNVS_ON_BAIT_AND_TITV_KNOWN)
# 		PASSING_SNVS_ON_BAIT_AND_TITV_NOVEL (DEPENDENT ON COMBINE_VARIANTS OR CALCULATE_GENOTYPE_POSTERIORS)
# 		TITV_NOVEL (DEPENDENT ON PASSING_SNVS_ON_BAIT_AND_TITV_NOVEL)
# 		CONCORDANCE_ON_TARGET_PER_SAMPLE (DEPENDENT ON TITV_NOVEL,TITV_KNOWN,TITV_ALL)